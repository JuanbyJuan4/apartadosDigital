/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clases;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import clases.Clientes;
import clases.Conexion;
import clases.DataSourceManager;
import clases.Empleados;
import clases.ProductoApartado;
import digitalsound.Login;
import digitalsound.MenuInicio;
import digitalsound.SeleccionNuevo;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juanm
 */
public class RegistroApartado1 extends javax.swing.JFrame {
    Empleados mEmpleados = new Empleados();
    DataSourceManager dsm = new DataSourceManager();
    int idApartado;
    //Conexion mConexion;
    ArrayList mListaCorreos;
    ArrayList mListaTelefonos;
    ArrayList mListaApartados;
    private static Connection Conection;
    private static Statement Sentencia;
    private static ResultSet Resultado;
    /**
     * Creates new form RegistroApartado
     */
    public RegistroApartado1(Empleados empleados) {
        initComponents();
        this.setLocationRelativeTo(null);
        mEmpleados = empleados;
        Usuarios();
        metodos();
    }
    private void metodos(){
        Enter();
        try{
            obtenerID();
            llenarLApartados();
            obtenerNombre();
            llenarCBCorreos();
            llenarCBTelefonos();
        }catch(SQLException e){
            e.printStackTrace();
        }
        //mConexion = new Conexion("sistemaapartado","root","");
        this.setTitle("Digital Sound - Registro Apartado");
    }
    private void Usuarios(){
        String tipo = mEmpleados.getTipo().trim();
        lbl_usuario.setText(mEmpleados.getNombre().trim());
        lbl_tipo.setText(tipo);      
        dsm.setTipo(tipo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_menu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        cb_correo = new javax.swing.JComboBox<>();
        cb_telefono = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        txt_ingresar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_productos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lbl_apartado = new javax.swing.JLabel();
        btn_eliminar = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_tipo = new javax.swing.JLabel();
        lbl_usuario = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btn_cerrar_sesion1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel1.setText("Registro de apartado");

        btn_menu.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btn_menu.setText("Menu");
        btn_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_menu))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_menu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Nombre: ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Correo: ");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Telefono:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        txt_nombre.setEditable(false);
        txt_nombre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txt_nombre.setFocusable(false);
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nombreKeyReleased(evt);
            }
        });
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 6, 610, -1));

        cb_correo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cb_correo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_correoActionPerformed(evt);
            }
        });
        jPanel3.add(cb_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 610, -1));

        cb_telefono.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jPanel3.add(cb_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 610, -1));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tb_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Cantidad", "Precio Unitario", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_productos);
        if (tb_productos.getColumnModel().getColumnCount() > 0) {
            tb_productos.getColumnModel().getColumn(1).setResizable(false);
            tb_productos.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("No. Apartado:");

        lbl_apartado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_ingresar)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_apartado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbl_apartado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btn_eliminar.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btn_eliminar.setText("Eliminar Producto");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        btn_nuevo.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btn_nuevo.setText("Nuevo Apartado");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jButton1.setText("Enviar Correo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3)))))
                .addGap(80, 80, 80))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_nuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminar))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(208, 31, 36));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/soundchico.png"))); // NOI18N
        jLabel5.setText("jLabel1");

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Puesto:");

        lbl_tipo.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lbl_tipo.setForeground(new java.awt.Color(255, 255, 255));

        lbl_usuario.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lbl_usuario.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Usuario:");

        btn_cerrar_sesion1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        btn_cerrar_sesion1.setText("Cerrar Sesion");
        btn_cerrar_sesion1.setFocusable(false);
        btn_cerrar_sesion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrar_sesion1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_cerrar_sesion1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbl_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(lbl_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cerrar_sesion1)
                .addGap(54, 54, 54)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void cb_correoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_correoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_correoActionPerformed

    private void txt_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreKeyReleased

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        Connection con = null;
        PreparedStatement pst = null;
        try{
            con = dsm.getDataSource().getConnection();
            pst = con.prepareStatement("CALL eliminar_producto_apartado(?,?)");
            pst.setInt(1, idApartado);
            pst.setString(2, (String) tb_productos.getValueAt(tb_productos.getSelectedRow(), 0));
            pst.executeUpdate();
            llenarLApartados();
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            if(pst != null){
                
            }
            if(con != null){
                
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        
        // Cambia de pestania
        SeleccionNuevo seleccion = new SeleccionNuevo(mEmpleados);
        seleccion.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(null, "Not implemented yet");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuActionPerformed
        MenuInicio menu = new MenuInicio(mEmpleados);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_menuActionPerformed

    private void btn_cerrar_sesion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrar_sesion1ActionPerformed
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_cerrar_sesion1ActionPerformed
    private void obtenerNombre() throws SQLException{
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try{
            con = dsm.getDataSource().getConnection();
            pst = con.prepareStatement("CALL obtenerNombre(?);"); //falta implementar este procedimiento almacenado a la nueva base de datos
            idApartado =Integer.parseInt( lbl_apartado.getText().trim());
            pst.setString(1, lbl_apartado.getText().trim()); //Obtiene el id de la solicitud
            rs = pst.executeQuery();
            while(rs.next()){
                System.out.println("Procesando fila...");
                txt_nombre.setText(rs.getString("NombreCliente"));                
            }
            System.out.println("Se ha procesado todo el ResultSet");
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "ERROR");
            e.printStackTrace();
        }finally{
            if(rs != null){
                rs.close();
            }
            if(pst != null){
                pst.close();
            }
            if(con != null){
                con.close();
            }
        }
    }
    public void Enter(){
        txt_ingresar.addKeyListener(new KeyAdapter() {
        @Override
        public void keyPressed(KeyEvent e) {
            Connection con = null;
            PreparedStatement pst = null;
            ResultSet rs = null;
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    try{
                        con = dsm.getDataSource().getConnection();
                        pst = con.prepareStatement("CALL insercion_p_apartado(?, ?, 1)"); //falta implementar este procedimiento almacenado a la nueva base de datos
                        pst.setInt(1, Integer.parseInt(lbl_apartado.getText().trim())); //Obtiene el id del apartado
                        pst.setString(2, txt_ingresar.getText().trim()); //Obtiene el codigo del producto
                        pst.executeUpdate();
                        llenarLApartados();
                        JOptionPane.showMessageDialog(null, txt_ingresar.getText());
                        txt_ingresar.setText("");
                    }catch(SQLException ex){
                        JOptionPane.showMessageDialog(null, "Producto no encontrado");
                        ex.printStackTrace();
                    }
                    finally{
                        if(pst != null){
                            try {
                                pst.close();
                            } catch (SQLException ex) {
                                Logger.getLogger(RegistroApartado1.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    if(con != null){
                        try {
                            con.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(RegistroApartado1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
        });
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroApartado1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroApartado1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroApartado1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroApartado1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Empleados mEmpleados = new Empleados();
                new RegistroApartado1(mEmpleados).setVisible(true);
            }
        });
    }
    public void setNombre(int id, String nombre){
        txt_nombre.setText(nombre);
        System.out.println("Id: "+id);
    }
    public void llenarCBCorreos(){
        System.out.println("Entrando a llenarCBCorreos()");
            cb_correo.removeAllItems();
            try{
                mListaCorreos = this.getListaCorreos();
            }catch(SQLException e){
                e.printStackTrace();
            }
            
            Iterator iterador = mListaCorreos.iterator();
            System.out.println("Agregando correos: " + mListaCorreos); // Verifica la salida en la consola
            while (iterador.hasNext()) {
                Clientes mClientes = (Clientes) iterador.next();
                if (mClientes != null) {
                    System.out.println("Agregando correos: " + mClientes); // Verifica la salida en la consola
                    cb_correo.addItem(mClientes);
                }
            }
    }
    public ArrayList getListaCorreos() throws SQLException{
        ArrayList mListaCorreos = new ArrayList();
        Clientes mClientes;
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try{
            
            con = dsm.getDataSource().getConnection();
            pst = con.prepareStatement("CALL consulta_correo(?);"); //falta implementar este procedimiento almacenado a la nueva base de datos
            pst.setString(1, txt_nombre.getText().trim()); //Obtiene el nombre para añadirlo a la consulta
            rs = pst.executeQuery();
            while(rs.next()){
                System.out.println("Procesando fila...");
                mClientes = new Clientes();
                mClientes.setCorreoCliente(rs.getString("correo"));
                mListaCorreos.add(mClientes);
                mClientes.setComboBox(1);
            }
            System.out.println("Se ha procesado todo el ResultSet");
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            if(rs != null){
                rs.close();
            }
            if(pst != null){
                pst.close();
            }
            if(con != null){
                con.close();
            }
        }
        return mListaCorreos;
    }
    public void llenarCBTelefonos(){
        System.out.println("Entrando a llenarCBTelefonos()");
            cb_telefono.removeAllItems();
            try{
                mListaTelefonos = this.getListaTelefonos();
            }catch(SQLException e){
                e.printStackTrace();
            }
            Iterator iterador = mListaTelefonos.iterator();
            System.out.println("Agregando telefonos: " + mListaTelefonos); // Comprobar que se esta llenando la combo box en consola
            while (iterador.hasNext()) {
                Clientes mClientes = (Clientes) iterador.next();
                if (mClientes != null) {
                    System.out.println("Agregando telefonos: " + mClientes); // Comprobar que se esta llenando la combo box en consola
                    cb_telefono.addItem(mClientes);
                }
            }
    }
    public ArrayList getListaTelefonos() throws SQLException{
        ArrayList mListaTelefonos = new ArrayList();
        Clientes mClientes = null;
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try{
            
            con = dsm.getDataSource().getConnection();
            pst = con.prepareStatement("CALL consulta_numero(?);"); //falta implementar este procedimiento almacenado a la nueva base de datos
            pst.setString(1, txt_nombre.getText().trim()); //Obtiene el nombre para añadirlo a la consulta
            rs = pst.executeQuery();
            while(rs.next()){
                System.out.println("Procesando numero...");
                mClientes = new Clientes();
                mClientes.setNumeroCliente(rs.getString("telefono"));
                mListaTelefonos.add(mClientes);
                mClientes.setComboBox(2); //implementar metodo a la clase clientes (checar en la compu) 
            }
            System.out.println("Se ha procesado todo el ResultSet");
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            if(rs != null){
                rs.close();
            }
            if(pst != null){
                pst.close();
            }
            if(con != null){
                con.close();
            }
        }
        return mListaTelefonos;
    }
        private void obtenerID() throws SQLException{
            Connection con = null;
            PreparedStatement pst = null;
            ResultSet rs = null;
        try{
            con = dsm.getDataSource().getConnection();
            pst = con.prepareStatement("select obtener_idReserva() as id");
            rs = pst.executeQuery();
            if(rs.next()){
            int idSolicitud = rs.getInt("id");
            System.out.println("id: "+idSolicitud);
            lbl_apartado.setText(""+idSolicitud);
            }else{
                System.out.println("Error");
            }   
        }catch(SQLException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error de conexion");
        }finally{
            if(rs != null){
                rs.close();
            }
            if(pst != null){
                pst.close();
            }
            if(con != null){
                con.close();
            }
        }
    }
    public void llenarLApartados() {
            // Crea un DefaultTableModel con los nombres de las columnas
           DefaultTableModel tableModel = new DefaultTableModel(new String[]{"ID","Producto", "Precio Unitario", "Cantidad", "Total"}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Bloquea todas las celdas para que no sean editables
        }
        };
            try{
                mListaApartados = this.getListaProductos();
            }catch(SQLException e){
                e.printStackTrace();
            }
            Iterator<ProductoApartado> iterador = mListaApartados.iterator();
            while (iterador.hasNext()) {
                ProductoApartado mApartado = iterador.next();
                System.out.println("Agregando Producto: " + mApartado);
                tableModel.addRow(new Object[]{mApartado.getId(), mApartado.getNombre(), mApartado.getPrecio(), mApartado.getCantidad(), mApartado.getTotal()});
            }
            tb_productos.setModel(tableModel);
        }
        public ArrayList getListaProductos() throws SQLException{
            ArrayList mListaProductos = new ArrayList();
            ProductoApartado mProductoApartado = null;
            Connection con = null;
            PreparedStatement pst = null;
            ResultSet rs = null;
            int id;
            try{
                con = dsm.getDataSource().getConnection();
                pst = con.prepareStatement("CALL buscar_producto_apartado(?);");
                id = Integer.parseInt(lbl_apartado.getText().trim());
                pst.setInt(1, id); //Obtiene el nombre para añadirlo a la consulta
                rs = pst.executeQuery();
                while(rs.next()){
                    System.out.println("Procesando fila...");
                    mProductoApartado = new ProductoApartado();
                    mProductoApartado.setNombre(rs.getString("p.NombreProducto"));
                    mProductoApartado.setId(rs.getString("p.idProducto"));
                    mProductoApartado.setPrecio(rs.getDouble("p.precio"));
                    mProductoApartado.setCantidad(rs.getInt("pa.cantidad"));
                    mProductoApartado.setTotal(rs.getDouble("total"));
                    mListaProductos.add(mProductoApartado);
                }
                System.out.println("Se ha procesado todo el ResultSet");
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "ERROR");
                e.printStackTrace();
            }finally{
                if(rs != null){
                    rs.close();
                }
                if(pst != null){
                    pst.close();
                }
                if(con != null){
                    con.close();
                }
            }
            return mListaProductos;
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cerrar_sesion1;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_menu;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JComboBox<Clientes> cb_correo;
    private javax.swing.JComboBox<Clientes> cb_telefono;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_apartado;
    private javax.swing.JLabel lbl_tipo;
    private javax.swing.JLabel lbl_usuario;
    private javax.swing.JTable tb_productos;
    private javax.swing.JTextField txt_ingresar;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}
