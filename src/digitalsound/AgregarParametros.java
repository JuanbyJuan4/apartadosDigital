/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package digitalsound;

/**
 *
 * @author migue
 */

import clases.Empleados;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class AgregarParametros extends javax.swing.JFrame {
    Empleados mEmpleados = new Empleados();
    ArrayList<String> currentParams = new ArrayList<>();
    ArrayList<String> allParams = new ArrayList<>();
    String nameQuestion;
    private ConsultasTransaccionalesDB parentWindow;
    
    
    /**
     * Creates new form AgregarParametros
     */
    public AgregarParametros(Empleados mEmpleados, ConsultasTransaccionalesDB parentWindow,String nameQuestion,ArrayList<String> currentParams, ArrayList<String>allParams) {
        initComponents();
        System.out.println("Pregunta: ¿"+nameQuestion);
        System.out.println("Pregunta: ¿"+currentParams);
        System.out.println("Pregunta: ¿"+allParams);
        this.mEmpleados = mEmpleados;
        
        this.parentWindow = parentWindow;
        this.nameQuestion = nameQuestion;
        this.currentParams = currentParams;
        this.allParams = allParams;
        
        configurarVentana();
        loadParams(nameQuestion, currentParams, allParams);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        pnlContent = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(208, 31, 36));

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addGap(0, 30, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(208, 31, 36));

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 31, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlContentLayout = new javax.swing.GroupLayout(pnlContent);
        pnlContent.setLayout(pnlContentLayout);
        pnlContentLayout.setHorizontalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
        pnlContentLayout.setVerticalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                Empleados mEmpleados = new Empleados();
                ArrayList<String> currentParams = new ArrayList();
                ArrayList<String> allParams = new ArrayList<>();
                ConsultasTransaccionalesDB consultas = new ConsultasTransaccionalesDB(mEmpleados);
                new AgregarParametros(mEmpleados,consultas,"",currentParams, allParams).setVisible(true);
            }
        });
    }
    
    public void configurarVentana(){
        this.setTitle("Digital Sound - Modificar producto");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
    }
    
    public void exitWindow(){
        this.dispose(); //cierra la ventana
    }
    
    public void addToCurrentParams(String newParam){
        int currentSize = this.currentParams.size() - 1;
        // Se actualiza la posicion de boton en lista para que aparazca en la
        //Ultima posicion
        
        String btnExportar = currentParams.get(currentSize);
        currentParams.remove(currentSize);
        
        currentParams.add(newParam);
        currentParams.add(btnExportar);
        
    }
    
    public void loadParams(String nameQuestion, ArrayList<String> currentParams, ArrayList<String> allParams){
        
        System.out.println("Hola, si estoy entrando");
        JPanel contenido = new JPanel();
        contenido.setLayout(new GridBagLayout());
        
        GridBagConstraints gbc = new GridBagConstraints();
        int gridPosY=0;
        
        gbc.gridx = 0;
        gbc.gridy = gridPosY;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.CENTER;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        
        JLabel pregunta = new JLabel("¿"+nameQuestion);
        pregunta.setFont(new Font("Pixel Operator Mono",Font.BOLD,26));
        
        contenido.add(pregunta,gbc);
        
        int numOfParams = allParams.size();
        // ^ Lo aumento en 1 debido a que currentParams cuenta
        // con el Elemento boton de Exportar por lo que al estar lleno
        // el tamaño de currentParams sera mas largo
        
        gridPosY++;
        if(!(numOfParams+1 == currentParams.size())){
            for(int x=0; x< numOfParams; x++){
            // recorrer allParams
            // si currentParams ya tienen ese parametro no cargarlo
            if(!currentParams.contains(allParams.get(x))){
                
                if((!currentParams.contains("BotonFecha_Inicial")) && (!currentParams.contains("BotonFecha_Final")) && (allParams.get(x).equals("BotonFecha_Final")) ){
                    // Si no se tiene el Parametro Fecha Inicial
                    // Ni el parametro Fecha Final
                    // Seria redundante cargar 2 botones que representan lo mismo
                    
                    // Por lo que compruebo que sea el segundo caso de Fecha -- seria redundante, por lo que no se muestra
                }else{
                    System.out.println("Agregando:"+allParams.get(x));
                    JButton button = new JButton(allParams.get(x));
                    button.setFont(new Font("Pixel Operator Mono",Font.BOLD,22));
                    String newParam = allParams.get(x);
                    
                    button.addMouseListener(new MouseListener (){
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            addToCurrentParams(newParam);
                            parentWindow.ActualizarParametros(nameQuestion,currentParams);
                            exitWindow();
                            // addToCurrentParams(allParams.get(x)); INCORRECTO porque X siempre esta cambiando
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {
                           
                        }

                        @Override
                        public void mouseReleased(MouseEvent e) {
                            
                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {
                            
                        }

                        @Override
                        public void mouseExited(MouseEvent e) {
                            
                        }
                    
                    });
                    
                    gbc.gridy = gridPosY;
                    
                    contenido.add(button,gbc);
                    gridPosY++;
                }
            }
            // si se carga un parametro de Fecha que sea Inicial
            // si ya hay registrado uno de fecha, 
            }
        }
        else{
            JLabel aviso = new JLabel("No quedan parametros por agregar");
            aviso.setFont(new Font("Pixel Operator Mono",Font.BOLD,22));
            
            gbc.gridy = gridPosY;
            contenido.add(aviso,gbc);
            gridPosY++;
        }
        
        JButton exitButton = new JButton("Cancelar");
        exitButton.setFont(new Font("Pixel Operator Mono",Font.BOLD,22));
        
        gbc.gridy = gridPosY;
        exitButton.addMouseListener(new MouseListener(){
            @Override
            public void mouseClicked(MouseEvent e) {
                exitWindow();
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                exitButton.setForeground(new Color(102,204,255));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                exitButton.setForeground(new Color(0,0,0));
            }
            
        });
        contenido.add(exitButton,gbc);
        
        pnlContent.removeAll(); // <--- ¡muy importante!
        pnlContent.revalidate();
        pnlContent.repaint();
        pnlContent.setLayout(new BorderLayout());
        pnlContent.add(contenido, BorderLayout.CENTER);
        pnlContent.revalidate();
        pnlContent.repaint();
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel pnlContent;
    // End of variables declaration//GEN-END:variables
}
