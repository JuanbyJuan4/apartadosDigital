/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package digitalsound;

import clases.Abonos;
import clases.DataSourceManager;
import clases.Empleados;
import clases.ProductoApartado;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class ConsultaAbonos extends javax.swing.JFrame {
    ArrayList mListaAbonos;
    listapartados mLista;
    Empleados mEmpleados;
    ProductoApartado mProductoApartado;
    DataSourceManager dsm = new DataSourceManager();
    int idReserva;

    /**
     * Creates new form ConsultaAbonos
     * @param idRes
     * @param empleados
     * @param lista
     * @param producto
     */
    public ConsultaAbonos(int idRes, Empleados empleados, listapartados lista, ProductoApartado producto) {
        initComponents();
        ConfigurarVentana();
        mEmpleados = empleados;
        mProductoApartado = producto;
        System.out.println(""+mProductoApartado.getIdProdApartado());
        mLista = lista;
        dsm.setTipo(mEmpleados.getTipo());
        idReserva = idRes;
        llenarLAbonos(idRes);
    }
    private void ConfigurarVentana(){
        this.setTitle("Digital Sound - Lista de abonos");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_abonos = new javax.swing.JTable();
        btn_eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(208, 31, 36));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 79, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tb_abonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tb_abonos);

        btn_eliminar.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btn_eliminar.setText("Eliminar abono");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_eliminar))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        Connection con = null;
        PreparedStatement pst = null;
        try{
            con = dsm.getDataSource().getConnection();
            pst = con.prepareStatement("CALL eliminar_abono(?)");
            pst.setInt(1, (Integer) tb_abonos.getValueAt(tb_abonos.getSelectedRow(), 0));
            pst.executeUpdate();
            llenarLAbonos(idReserva);
            mLista.llenarLApartados();
            mLista.llenarLProductos(idReserva);
        }catch(SQLException e){
            e.printStackTrace();
        }catch(ArrayIndexOutOfBoundsException e){
            e.printStackTrace();
        }finally{
            if(pst != null){
                try {
                    pst.close();
                } catch (SQLException ex) {
                    Logger.getLogger(ConsultaAbonos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(con != null){
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(ConsultaAbonos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaAbonos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaAbonos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaAbonos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaAbonos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable(){
            public void run() {
                Empleados mEmpleados = new Empleados();
                listapartados mLista = new listapartados(mEmpleados);
                ProductoApartado mProductoApartado = new ProductoApartado();
                new ConsultaAbonos(0,mEmpleados, mLista,mProductoApartado).setVisible(true);
            }
        });
    }
            public void llenarLAbonos(int id) {
            // Crea un DefaultTableModel con los nombres de las columnas
           DefaultTableModel tableModel = new DefaultTableModel(new String[]{"ID","CODIGO", "PRODUCTO", "FECHA", "ABONO"}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Bloquea todas las celdas para que no sean editables
        }
        };
            // Obtiene la lista de equipos de la base de datos
            try{
                mListaAbonos = getListaAbonos(id);
            }catch(SQLException e){
                e.printStackTrace();
            }
            // Itera sobre la lista de equipos y añade cada uno al tableModel
            Iterator<Abonos> iterador = mListaAbonos.iterator();
            while (iterador.hasNext()) {
                Abonos mAbono = iterador.next();
                // Añade una fila con los datos de cada objeto Equipos
                tableModel.addRow(new Object[]{mAbono.getIdAbono(), mAbono.getIdProducto(), mAbono.getNombreProducto(), mAbono.getFecha(), mAbono.getAbono()});
            }

            // Asigna el DefaultTableModel a la JTable
            tb_abonos.setModel(tableModel);
        }
        public ArrayList getListaAbonos(int estado) throws SQLException{
            ArrayList mListaAbonos = new ArrayList();
            Abonos mAbonos = null;
            Connection con = null;
            PreparedStatement pst = null;
            ResultSet rs = null;
            try{
                con = dsm.getDataSource().getConnection();
                pst = con.prepareStatement("CALL consulta_abonos(?);");
                pst.setInt(1, mProductoApartado.getIdReserva()); //Obtiene el nombre para añadirlo a la consulta
                System.out.println("Id prod apartado: "+mProductoApartado.getIdProdApartado());
                rs = pst.executeQuery();
                while(rs.next()){
                    System.out.println("Procesando fila...");
                    mAbonos = new Abonos();
                    mAbonos.setIdAbono(rs.getInt("idAbono"));
                    mAbonos.setIdProducto(rs.getString("idProd"));
                    mAbonos.setNombreProducto(rs.getString("nombre"));
                    mAbonos.setFecha(rs.getString("fecha"));
                    mAbonos.setAbono(rs.getDouble("abono"));
                    mListaAbonos.add(mAbonos);                
                } 
            }catch(SQLException e){
                e.printStackTrace();
            }finally{
                if(rs != null){
                    rs.close();
                }
                if(pst != null){
                    pst.close();
                }
                if(con != null){
                    con.close();
                }
            }
            return mListaAbonos;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_abonos;
    // End of variables declaration//GEN-END:variables
}
